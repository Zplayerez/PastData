//题目描述
//在AVL树中，任何节点的两个子树的高度最多相差1；如果它们高度相差不止1，则需要重新平衡以恢复这种属性。
//现在给定一个插入序列， 一个一个地将键值插入初始为空的AVL树中，输出得到的AVL树的层次顺序遍历序列，并判断它是否是一个完全二叉树。
//
//输入格式：
//
//第一行包含一个正整数N(<= 20)。然后在下一行给出N个不同的整数键。所有数字都用空格隔开。
//
//输出格式：
//
//第一行打印得到的AVL树的层次顺序遍历序列。所有数字都必须用空格隔开，并且行尾必须没有多余的空格。然后在下一行中，如果树为完全二叉树，则打印“Yes”; 如果不是，则打印“No”。
//
//样例1
//输入：
//5
//88 70 61 63 65
//
//输出：
//70 63 88 61 65
//Yes
//
//样例2
//输入：
//10
//62 88 58 47 35 73 51 99 37 93
//
//输出：
//62 47 88 35 58 73 99 37 51 93
//No